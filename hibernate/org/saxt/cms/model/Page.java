package org.saxt.cms.model;
// Generated Mar 3, 2018 2:20:56 PM by Hibernate Tools 3.6.0.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Page generated by hbm2java
 */
@Entity
@Table(name = "page", catalog = "cms")
public class Page implements java.io.Serializable {

	private String id;
	private Service service;
	private String name;
	private String description;
	private String status;
	private String pageType;
	private String html;
	private String stagingHtml;
	private String publishedHtml;
	private Date creationDate;
	private Date lastModifiedDate;
	private Set<PageComponent> pageComponents = new HashSet<PageComponent>(0);

	public Page() {
	}

	public Page(String id, Service service, String name, String description, Date creationDate, Date lastModifiedDate) {
		this.id = id;
		this.service = service;
		this.name = name;
		this.description = description;
		this.creationDate = creationDate;
		this.lastModifiedDate = lastModifiedDate;
	}

	public Page(String id, Service service, String name, String description, String status, String pageType,
			String html, String stagingHtml, String publishedHtml, Date creationDate, Date lastModifiedDate,
			Set<PageComponent> pageComponents) {
		this.id = id;
		this.service = service;
		this.name = name;
		this.description = description;
		this.status = status;
		this.pageType = pageType;
		this.html = html;
		this.stagingHtml = stagingHtml;
		this.publishedHtml = publishedHtml;
		this.creationDate = creationDate;
		this.lastModifiedDate = lastModifiedDate;
		this.pageComponents = pageComponents;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false, length = 50)
	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "service_id", nullable = false)
	public Service getService() {
		return this.service;
	}

	public void setService(Service service) {
		this.service = service;
	}

	@Column(name = "name", nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", nullable = false, length = 50)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "status", length = 11)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Column(name = "page_type", length = 12)
	public String getPageType() {
		return this.pageType;
	}

	public void setPageType(String pageType) {
		this.pageType = pageType;
	}

	@Column(name = "html", length = 65535)
	public String getHtml() {
		return this.html;
	}

	public void setHtml(String html) {
		this.html = html;
	}

	@Column(name = "staging_html", length = 65535)
	public String getStagingHtml() {
		return this.stagingHtml;
	}

	public void setStagingHtml(String stagingHtml) {
		this.stagingHtml = stagingHtml;
	}

	@Column(name = "published_html", length = 65535)
	public String getPublishedHtml() {
		return this.publishedHtml;
	}

	public void setPublishedHtml(String publishedHtml) {
		this.publishedHtml = publishedHtml;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "creation_date", nullable = false, length = 19)
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_modified_date", nullable = false, length = 19)
	public Date getLastModifiedDate() {
		return this.lastModifiedDate;
	}

	public void setLastModifiedDate(Date lastModifiedDate) {
		this.lastModifiedDate = lastModifiedDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "page")
	public Set<PageComponent> getPageComponents() {
		return this.pageComponents;
	}

	public void setPageComponents(Set<PageComponent> pageComponents) {
		this.pageComponents = pageComponents;
	}

}
